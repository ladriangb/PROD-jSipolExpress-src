/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FiltroRenovacionesDialog.java
 *
 * Created on 16/09/2010, 03:38:46 PM
 */

package vista.reportes;

import controlador.reportes.ReporteController;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import modelo.entidades.Reporte;
import modelo.entidades.polizas.recibos.maestra.Recibo;
import modelo.utilitario.BuscarPersona;
import modelo.utilitario.FiltroRenovacion;
import org.openswing.swing.form.client.FormController;
import org.openswing.swing.mdi.client.InternalFrame;
import org.openswing.swing.mdi.client.MDIFrame;
import org.openswing.swing.message.send.java.FilterWhereClause;

/**
 *
 * @author PAPA
 */
public class FiltroPersonasDialog extends InternalFrame {

    private Reporte reporte;
    private String estilo;
    private FiltroRenovacion renovacion;

    /** Creates new form FiltroRenovacionesDialog */
    public FiltroPersonasDialog(Reporte reporte, String estilo) {
        initComponents();

//        jFormattedTextField1.setText(String.valueOf(Calendar.getInstance().get(Calendar.YEAR)));

        this.getRootPane().setDefaultButton(jButton1);
        this.reporte = reporte;
        this.estilo = estilo;

//        PersonaLookupControllerPorNombre lookupCompania = new PersonaLookupControllerPorNombre("SEG");
//        lookupCompania.addLookup2ParentLink("compania");
//        lookupCompania.addLookup2ParentLink("nombreCorto", "compania.nombreCorto");
//        codLookupControl2.setLookupController(lookupCompania);
//
//        PersonaLookupControllerPorNombre lookupProductor = new PersonaLookupControllerPorNombre("PRD");
//        lookupProductor.addLookup2ParentLink("productor");
//        lookupProductor.addLookup2ParentLink("nombreCorto", "productor.nombreCorto");
//        codLookupControl5.setLookupController(lookupProductor);
//
//        PersonaLookupControllerPorNombre lookupCobrador = new PersonaLookupControllerPorNombre("COB");
//        lookupCobrador.addLookup2ParentLink("cobrador");
//        lookupCobrador.addLookup2ParentLink("nombreCorto", "cobrador.nombreCorto");
//        codLookupControl6.setLookupController(lookupCobrador);
//
//        DefaultLookupController grupo = new DefaultLookupController(GrupoPoliza.class.getName());
//        grupo.addLookup2ParentLink("grupo");
//        codLookupControl4.setLookupController(grupo);
//
//        DefaultLookupController ramo = new DefaultLookupController(RamoPoliza.class.getName());
//        ramo.addLookup2ParentLink("ramo");
//        codLookupControl3.setLookupController(ramo);

        jButton1.addActionListener(new Filtro());
        MDIFrame.add(this);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        form1 = new org.openswing.swing.form.client.Form();
        textControl1 = new org.openswing.swing.client.TextControl();
        labelControl2 = new org.openswing.swing.client.LabelControl();
        codLookupControl1 = new org.openswing.swing.client.CodLookupControl();
        labelControl1 = new org.openswing.swing.client.LabelControl();
        textControl4 = new org.openswing.swing.client.TextControl();
        labelControl4 = new org.openswing.swing.client.LabelControl();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Filtro de Personas");

        jButton1.setText("Filtrar");

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Parametros de Filtrado"));

        form1.setVOClassName(BuscarPersona.class.getName());

        textControl1.setAttributeName("rif");
        textControl1.setToolTipText("Cedula de la Persona o RIF");
        textControl1.setTrimText(true);
        textControl1.setUpperCase(true);

        labelControl2.setLabel("persona.rif");

        codLookupControl1.setAttributeName("tipoPersona.nombre");
        codLookupControl1.setAutoCompletitionWaitTime(1000L);
        codLookupControl1.setMaxCharacters(20);
        codLookupControl1.setToolTipText("Tipo de Persona a Buscar");

        labelControl1.setLabel("persona.tipoPersona");

        textControl4.setAttributeName("nombreLargo");
        textControl4.setToolTipText("Nombre de la Persona");
        textControl4.setTrimText(true);
        textControl4.setUpperCase(true);

        labelControl4.setLabel("persona.nombre");

        javax.swing.GroupLayout form1Layout = new javax.swing.GroupLayout(form1);
        form1.setLayout(form1Layout);
        form1Layout.setHorizontalGroup(
            form1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(form1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(form1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(form1Layout.createSequentialGroup()
                        .addComponent(labelControl1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(codLookupControl1, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE))
                    .addGroup(form1Layout.createSequentialGroup()
                        .addComponent(labelControl2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textControl1, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE))
                    .addGroup(form1Layout.createSequentialGroup()
                        .addComponent(labelControl4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textControl4, javax.swing.GroupLayout.DEFAULT_SIZE, 321, Short.MAX_VALUE)))
                .addContainerGap())
        );

        form1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {labelControl1, labelControl2, labelControl4});

        form1Layout.setVerticalGroup(
            form1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(form1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(form1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelControl1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(codLookupControl1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(form1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelControl2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textControl1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(form1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelControl4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textControl4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(form1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(form1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.openswing.swing.client.CodLookupControl codLookupControl1;
    private org.openswing.swing.form.client.Form form1;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel4;
    private org.openswing.swing.client.LabelControl labelControl1;
    private org.openswing.swing.client.LabelControl labelControl2;
    private org.openswing.swing.client.LabelControl labelControl4;
    private org.openswing.swing.client.TextControl textControl1;
    private org.openswing.swing.client.TextControl textControl4;
    // End of variables declaration//GEN-END:variables

    class Filtro extends FormController implements ActionListener {

        public void actionPerformed(ActionEvent e) {
            //renovacion = ((FiltroRenovacion) FiltroRenovacionesDialog.this.form1.getVOModel().getValueObject());
            ReporteController controlador = new ReporteController();
            Map filtros = new HashMap(0);
            FilterWhereClause parametros[] = new FilterWhereClause[2];
            Calendar c = Calendar.getInstance();

            Date desde, hasta;

            int cant = 0;
            if (renovacion.getCobrador() != null && renovacion.getCobrador().getId() != null) {
                FilterWhereClause cob[] = new FilterWhereClause[2];
                cob[0] = new FilterWhereClause("cobrador2.id", "=", renovacion.getCobrador().getId());
                filtros.put("cobrador2.id", cob);
            }
            if (renovacion.getCompania() != null && renovacion.getCompania().getId() != null) {
                FilterWhereClause com[] = new FilterWhereClause[2];
                com[0] = new FilterWhereClause("poliza.compania.id", "=", renovacion.getCompania().getId());
                filtros.put("poliza.compania.id", com);
            }

            if (renovacion.getGrupo() != null && renovacion.getGrupo().getId() != null) {
                FilterWhereClause gru[] = new FilterWhereClause[2];
                gru[0] = new FilterWhereClause("poliza.grupoPoliza.id", "=", renovacion.getGrupo().getId());
                filtros.put("poliza.grupoPoliza.id", gru);
            }

            if (renovacion.getProductor() != null && renovacion.getProductor().getId() != null) {
                FilterWhereClause pro[] = new FilterWhereClause[2];
                pro[0] = new FilterWhereClause("poliza.productor.id", "=", renovacion.getProductor().getId());
                filtros.put("poliza.productor.id", pro);
            }

            if (renovacion.getRamo() != null && renovacion.getRamo().getId() != null) {
                FilterWhereClause ram[] = new FilterWhereClause[2];
                ram[0] = new FilterWhereClause("poliza.ramoPoliza.id", "=", renovacion.getRamo().getId());
                filtros.put("poliza.ramoPoliza.id", ram);
            }

//            switch (jTabbedPane1.getSelectedIndex()) {
//                case 0:
//
//                    Calendar desde2 = Calendar.getInstance();
//                    desde2.set(Calendar.MONTH, jComboBox1.getSelectedIndex());
//                    desde2.set(Calendar.DATE, 1);
//                    desde2.set(Calendar.YEAR, Integer.valueOf(jFormattedTextField1.getText()));
//
//                    Calendar hasta2 = Calendar.getInstance();
//                    hasta2.set(Calendar.MONTH, jComboBox1.getSelectedIndex() + 1);
//                    hasta2.set(Calendar.DATE, 1);
//                    hasta2.set(Calendar.YEAR, Integer.valueOf(jFormattedTextField1.getText()));
//
//                    //validacion si pasa de año
//                    if (hasta2.get(Calendar.MONTH) == 12) {
//                        hasta2.set(Calendar.MONTH, 1);
//                        hasta2.set(Calendar.YEAR, hasta2.get(Calendar.YEAR) + 1);
//                    }
//
//                    parametros[0] = new FilterWhereClause("vigenciaHasta", ">=", desde2.getTime());
//                    parametros[1] = new FilterWhereClause("vigenciaHasta", "<", hasta2.getTime());
//                    break;
//                case 1:
//                    parametros[0] = new FilterWhereClause("vigenciaHasta", ">=", dateControl1.getDate());
//                    parametros[1] = new FilterWhereClause("vigenciaHasta", "<=", dateControl2.getDate());
//                    break;
//            }
//
//            filtros.put("vigenciaHasta", parametros);

            controlador.loadData(reporte, estilo, 1, 0, filtros, new ArrayList(0), new ArrayList(0), Recibo.class, new HashMap(0));
        }
    }
}
